# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter

on:
  push:
    branches: [ "feature/*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout V3
        uses: actions/checkout@v3
      - name: Create Signing Properties
        run: |
          cd mapp/android/app
          echo ${{ secrets.BASE64_KEYSTORE }} | base64 -d > keystore.jks
          ls
          cd ../..
          ls
          echo "" > signing.properties
          echo "release.keystore=keystore.jks" >> signing.properties
          echo "release.keystore.alias=${{ vars.KEYSTORE_ALIAS }}" >> signing.properties
          echo "release.keystore.keyPassword=${{ secrets.KEYSTORE_PASSWORD }}" >> signing.properties
          echo "release.keystore.storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> signing.properties
          ls
          cat signing.properties
      - name: Checkout Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'
          channel: 'stable'
      - name: Build Flutter
        run: | 
          flutter doctor -v
          ls
          sh mapp_setup.sh
          cd mapp
          ls
          flutter build apk -t lib/main_dev.dart --release --flavor dev --split-debug-info=build/flutter_mapping
          - name: Upload Apk To Firebase Distribution
      - name: Upload APK to Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: 1:776093832713:android:a1cff7e5084411f0458ad8
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_APP_DISTRIBUTION_CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: mapp/build/app/outputs/flutter-apk/app-dev-release.apk
